---
interface Props {
  title: string;
}
const { title } = Astro.props;
import ValidateToken from "../Hooks/localStorage";
import Header from "../components/Heder";
import LeftBar from "../components/LeftBar";

---

<!doctype html>
<html lang="es" class="">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <!-- <ValidateToken client:only /> -->
  <body
    class="bg-sacilight dark:bg-saciblack cont dark:text-white text-gray-900"
  >
    <header class="sticky top-0">
      <Header client:only />
    </header>
    <aside>
      <LeftBar client:only />
    </aside>
    <main>
      <slot />
    </main>
    <!-- <div class="flex flex-row">
      <div class="hidden md:flex md:sticky md:top-16">
        
      </div>
      <div
        class="flex w-full p-2 bg-sacilight dark:bg-saciblack text-gray-900 dark:text-white"
      >
      <slot />
      </div>
    </div> -->
  </body>

  <style is:global>
    :root {
    }
    html {
      font-family: system-ui, sans-serif;
      color-scheme: light dark;
    }
    .cont {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: auto 1fr;
      min-height: 100vh;
      grid-template-areas:
        "header"
        "content";
    }
    .cont header {
      grid-area: header;
    }
    .cont aside {
      grid-area: sidebar;
      display: none;
    }
    .cont main {
      grid-area: content;
      padding: 1rem;
    }
    @media (min-width: 640px) {
      .cont {
        grid-template-columns: auto 1fr 1fr 1fr;
        grid-template-rows: auto 1fr;
        min-height: 100vh;
        grid-template-areas:
          "header header header header"
          "sidebar content content content";
      }
      .cont aside {
        display: block;
      }
    }
    code {
      font-family:
        Menlo,
        Monaco,
        Lucida Console,
        Liberation Mono,
        DejaVu Sans Mono,
        Bitstream Vera Sans Mono,
        Courier New,
        monospace;
    }
  </style>

  <script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
  </script>
</html>
